buildscript {
	repositories {
		jcenter()
		maven { url = 'http://maven.modmuss50.me' }
		maven { url "https://plugins.gradle.org/m2/" }
		gradlePluginPortal()
	}
	dependencies {
		classpath 'net.fabricmc:fabric-loom:0.2.7-SNAPSHOT'
		classpath "com.wynprice.cursemaven:CurseMaven:2.1.1"
	}
}

apply plugin: 'fabric-loom'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: "com.wynprice.cursemaven"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
}

repositories {
	maven { url 'https://maven.fabricmc.net' }
	maven { url "https://minecraft.curseforge.com/api/maven"}
	maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}"
	modCompile "net.fabricmc:fabric-loader:${project.loader_version}"

	// Required Mods
	modCompile "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"
	modCompile "io.github.prospector.silk:SilkAPI:${project.silk_version}"
	modCompile "curse.maven:multiblock-api:${project.multiblock_api_version}"
	modCompile "curse.maven:crochet:${project.crochet_version}"
	modCompile "curse.maven:cutscene-api:${project.cutscene_api_version}"

	// Optional Libraries
	compile "blue.endless:jankson:1.1.0"
	compileOnly "com.google.code.findbugs:jsr305:3.0.1"

	// Optional Mods
	modCompile "curse.maven:cloth-config:${project.cloth_config_version}"
	modCompile "curse.maven:cloth:${project.cloth_version}"
	modCompile "me.shedaniel:RoughlyEnoughItems:${project.rei_version}"
	modCompile "io.github.prospector:modmenu:${project.modmenu_version}"
	modCompile "curse.maven:informed-load:${project.informedload_version}"
	modCompile "curse.maven:auto-config:${project.autoconfig_version}"
	//for testing if anything breaks with optifine, uncomment as necessary
	//modCompile "curse.maven:optifabric", "${project.optifabric_version}")

	// Nested Jars
	include "io.github.prospector.silk:SilkAPI:${project.silk_version}"
	include "curse.maven:multiblock-api:${project.multiblock_api_version}"
	include "curse.maven:crochet:${project.crochet_version}"
	include "curse.maven:cutscene-api:${project.cutscene_api_version}"
}

processResources {
	// this will ensure that this task is re-run when there's a change
	inputs.property "version", project.version

	// replace stuff in fabric.mod.json, nothing else
	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"

		// add mod metadata
		expand "version": project.version
	}

	// copy everything else, thats not the mcmod.info
	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE-CODE"
	from "LICENCE-ART"
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact(jar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}
}